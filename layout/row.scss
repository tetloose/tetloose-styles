@use 'sass:map';
@use '../settings' as *;

.l-row {
	$row: &;

	display: flex;
	flex-wrap: wrap;
	width: 100%;
	margin-right: auto;
	margin-left: auto;

	@include sizing('max-width', layout(max-width));

	&.full-width {
		@include sizing('max-width', layout(full-width));
	}

	&.align-flex-start {
		align-items: flex-start;
	}

	&.align-center {
		align-items: center;
	}

	&.align-flex-end {
		align-items: flex-end;
	}

	&.direction-row-reverse {
		flex-direction: row-reverse;
	}

	&.justify-flex-start {
		justify-content: flex-start;
	}

	&.justify-center {
		justify-content: center;
	}

	&.justify-flex-end {
		justify-content: flex-end;
	}

	&__col {
		display: inline-flex;
		flex-direction: column;
		width: 100%;

		@include sizing('padding-right', size(layout(gutter)));
		@include sizing('padding-left', size(layout(gutter)));

		&.align-flex-start {
			align-items: flex-start;
		}

		&.align-center {
			align-items: center;
		}

		&.align-flex-end {
			align-items: flex-end;
		}

		&.justify-flex-start {
			justify-content: flex-start;
		}

		&.justify-center {
			justify-content: center;
		}

		&.justify-flex-end {
			justify-content: flex-end;
		}

		&.width-auto {
			width: auto;
		}

		&.no-gutter {
			padding-right: 0;
			padding-left: 0;
		}

		@for $i from 1 through layout(columns) {
			&.width-#{$i} {
				width: column-width(layout(columns), #{$i});
			}
		}

		@include mq(breakpoint(sml)) {
			@for $i from 1 through layout(columns) {
				&.sml-width-#{$i} {
					width: column-width(layout(columns), #{$i});
				}
			}
		}

		@include mq(breakpoint(med)) {
			@for $i from 1 through layout(columns) {
				&.med-width-#{$i} {
					width: column-width(layout(columns), #{$i});
				}
			}
		}

		@include mq(breakpoint(lrg)) {
			@for $i from 1 through layout(columns) {
				&.lrg-width-#{$i} {
					width: column-width(layout(columns), #{$i});
				}
			}
		}

		@include mq(breakpoint(xlrg)) {
			@for $i from 1 through layout(columns) {
				&.xlrg-width-#{$i} {
					width: column-width(layout(columns), #{$i});
				}
			}
		}

		@include mq(breakpoint(xxlrg)) {
			@for $i from 1 through layout(columns) {
				&.xxlrg-width-#{$i} {
					width: column-width(layout(columns), #{$i});
				}
			}
		}
	}

	#{$row} {
		width: auto;
		max-width: none;

		@include sizing('margin-right', -#{size(layout(gutter))});
		@include sizing('margin-left', -#{size(layout(gutter))});
	}
}
